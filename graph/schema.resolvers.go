package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
	"lifehon_habits/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Habbit, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// Habits is the resolver for the habits field.
func (r *queryResolver) Habits(ctx context.Context) ([]*model.Habbit, error) {
	return []*model.Habbit{
		{
			ID:         "123",
			Name:       "hwehhe",
			Positive:   true,
			CreatedAt:  "today",
			User:       nil,
			Counter:    0,
			Categories: nil,
			Tags:       nil,
		},
	}, nil
}

// Habbit returns HabbitResolver implementation.
func (r *Resolver) Habbit() HabbitResolver { return &habbitResolver{r} }

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type habbitResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
