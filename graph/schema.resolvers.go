package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"lifehon_habits/graph/model"
)

// CreateTask is the resolver for the createTask field.
func (r *mutationResolver) CreateTask(ctx context.Context, input model.NewTask) (*model.Task, error) {
	panic(fmt.Errorf("not implemented: CreateTask - createTask"))
}

// Habits is the resolver for the habits field.
func (r *queryResolver) Habits(ctx context.Context) ([]*model.Habbit, error) {
	panic(fmt.Errorf("not implemented: Habits - habits"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, userName string) (*model.User, error) {
	user_psql, err := psql_models.FindUser(userName, r.DB)
	if err != nil {
		return nil, err
	}

	return &model.User{
		ID:   user_psql.Email,
		Name: user_psql.Name,
	}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
