union BoardContent = Task | Habbit

type Task {
  id: ID!
  name: String!
  done: Boolean!
  createdAt: String!
  finishedAt: String
  user: User!
  tags: [Tag!]
}

type Habbit {
  id: ID!
  name: String!
  positive: Boolean!
  createdAt: String!
  user: User!
  counter: Int!
  tags: [Tag!]
}

type Tag {
  name: String!
  createdAt: String!
  user: User!
}

type User {
  id: ID!
  name: String!
  board: Board!
  habbits: [Habbit!]
  tasks: [Task!]
}

type Board {
  user: User!
  columns: [Tag!]!
  column_content(tag_name: String!): [BoardContent!]
}

type Query {
  habits: [Habbit!]!
  user(user_name: String!): User
}

input NewTask {
  text: String!
  tags: [String!]

}

type Mutation {
  createTask(input: NewTask!): Task!
}
