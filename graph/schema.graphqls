type Task {
  id: ID!
  name: String!
  done: Boolean!
  createdAt: String!
  finishedAt: String
  user: User!
  categories: [Category!]
  tags: [Tag!]
}

type Habbit {
  id: ID!
  name: String!
  positive: Boolean!
  createdAt: String!
  user: User!
  counter: Int!
  categories: [Category!]
  tags: [Tag!]
}

type Category {
  name: String!
  createdAt: String!
  user: User!
}

type Tag {
  name: String!
  createdAt: String!
  user: User!
}

type User {
  id: ID!
  name: String!
}

type Query {
  habits: [Habbit!]!
  user(user_name: String!): User
}

input NewTodo {
  text: String!
  userId: String!
}

type Mutation {
  createTodo(input: NewTodo!): Habbit!
}
